>>> gm = __import__('7-base_geometry').BaseGeometry
>>> bg = gm()
>>> bg.integer_validator("num", 3)
>>> bg.integer_validator("num", -2)
Traceback (most recent call last):
    ...
ValueError: num must be greater than 0
>>> bg.integer_validator("num", 0)
Traceback (most recent call last):
    ...
ValueError: num must be greater than 0
>>> bg.integer_validator("num", "hello")
Traceback (most recent call last):
    ...
TypeError: num must be an integer
>>> bg.integer_validator(98, "hello")
Traceback (most recent call last):
    ...
TypeError: 98 must be an integer
>>> bg.integer_validator(98, 9)
>>> bg.integer_validator('age')
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator('age', 3.4)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator('age', [4])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator('age', (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator('age', {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator('age', True)
>>> bg.integer_validator('age', None)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
